import glob
import os
import urllib.request

import numpy as np
import pandas as pd
import streamlit as st
from PIL import Image


def update_params():
    st.experimental_set_query_params(challenge=st.session_state.day)


md_files = sorted(
    [int(x.strip("Day").strip(".md")) for x in glob.glob1("content", "*.md")]
)

# Logo and Navigation
col1, col2, col3 = st.columns((1, 4, 1))
with col2:
    st.image(Image.open("streamlit-logo-secondary-colormark-darktext.png"))
st.markdown("# Streamlit рдХреЗ 30 рджрд┐рди")

days_list = [f"Day {x}" for x in md_files]

query_params = st.experimental_get_query_params()

try:
    if query_params and query_params["challenge"][0] in days_list:
        st.session_state.day = query_params["challenge"][0]
except KeyError:
    st.session_state.day = days_list[0]

selected_day = st.selectbox(
    "рдЪреБрдиреМрддреА рд╢реБрд░реВ рдХрд░реЗрдВ ЁЯСЗ", days_list, key="day", on_change=update_params
)

with st.expander("#30DaysOfStreamlit рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ"):
    st.markdown(
        """
    **#30DaysOfStreamlit** рдПрдХ рдХреЛрдбрд┐рдВрдЧ рдЪреБрдиреМрддреА рд╣реИ рдЬрд┐рд╕реЗ Streamlit рдРрдк рдмрдирд╛рдиреЗ рдореЗрдВ рдЖрдкрдХреА рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдбрд┐рдЬрд╝рд╛рдЗрди рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред
    
    рд╡рд┐рд╢реЗрд╖ рд░реВрдк рд╕реЗ, рдЖрдк рдирд┐рдореНрди рдореЗрдВ рд╕рдХреНрд╖рдо рд╣реЛрдВрдЧреЗ:
    - Streamlit рдРрдкреНрд╕ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдХреЛрдбрд┐рдВрдЧ рд╡рд╛рддрд╛рд╡рд░рдг рд╕реЗрдЯ рдХрд░реЗрдВ
    - рдЕрдкрдирд╛ рдкрд╣рд▓рд╛ Streamlit рдРрдк рдмрдирд╛рдПрдВ
    - рдЕрдкрдиреЗ Streamlit рдРрдк рдХреЗ рд▓рд┐рдП рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рднреА рднрдпрд╛рдирдХ рдЗрдирдкреБрдЯ/рдЖрдЙрдЯрдкреБрдЯ рд╡рд┐рдЬреЗрдЯреНрд╕ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВ
    """
    )

# Sidebar
st.sidebar.header("рдмрд╛рд░реЗ рдореЗрдВ")
st.sidebar.markdown(
    "[Streamlit](https://streamlit.io) рдПрдХ Python рд▓рд╛рдЗрдмреНрд░реЗрд░реА рд╣реИ рдЬреЛ Python рдореЗрдВ рдЗрдВрдЯрд░реИрдХреНрдЯрд┐рд╡, рдбреЗрдЯрд╛-рдбреНрд░рд┐рд╡рди рд╡реЗрдм рдПрдкреНрд▓рд┐рдХреЗрд╢рди рдмрдирд╛рдиреЗ рдХреА рдЕрдиреБрдорддрд┐ рджреЗрддреА рд╣реИред"
)

st.sidebar.header("рд╕рдВрд╕рд╛рдзрди")
st.sidebar.markdown(
    """
- [Streamlit рдкреНрд░рд▓реЗрдЦрди](https://docs.streamlit.io/)
- [рдкреНрд░рд╡рдВрдЪрдХ рдкрддреНрд░рдХ](https://docs.streamlit.io/library/cheatsheet)
- [рдкреБрд╕реНрддрдХ](https://www.amazon.com/dp/180056550X) (рдбреЗрдЯрд╛ рд╕рд╛рдЗрдВрд╕ рдХреЗ рд▓рд┐рдП Streamlit рдХреЗ рд╕рд╛рде рд╢реБрд░реБрдЖрдд рдХрд░рдирд╛)
- [рдмреНрд▓реЙрдЧ](https://blog.streamlit.io/how-to-master-streamlit-for-data-science/) (рдбреЗрдЯрд╛ рд╕рд╛рдЗрдВрд╕ рдХреЗ рд▓рд┐рдП Streamlit рдореЗрдВ рдорд╣рд╛рд░рдд рд╣рд╛рд╕рд┐рд▓ рдХреИрд╕реЗ рдХрд░реЗрдВ)
"""
)

st.sidebar.header("Deploy")
st.sidebar.markdown(
    "рдЖрдк рдХреБрдЫ рд╣реА рдХреНрд▓рд┐рдХ рдореЗрдВ [Streamlit Community Cloud](https://streamlit.io/cloud) рдХрд╛ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░рдХреЗ Streamlit рдРрдкреНрд▓рд┐рдХреЗрд╢рди рдХреЛ рддреЗрдЬрд╝реА рд╕реЗ рдбрд┐рдкреНрд▓реЙрдп рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред"
)

# Display content
for i in days_list:
    if selected_day == i:
        st.markdown(f"# ЁЯЧУя╕П {i}")
        j = i.replace(" ", "")
        with open(f"content/{j}.md", "r") as f:
            st.markdown(f.read())
        if os.path.isfile(f"content/figures/{j}.csv") == True:
            st.markdown("---")
            st.markdown("### Figures")
            df = pd.read_csv(f"content/figures/{j}.csv", engine="python")
            for i in range(len(df)):
                st.image(f"content/images/{df.img[i]}")
                st.info(f"{df.figure[i]}: {df.caption[i]}")
